# docker-compose 环境变量
CLOUD_DEPOSITORY_TAG=latest
CLOUD_DEPOSITORY_URL=/cloud
CLOUD_DEPOSITORY_IP_PORT=192.168.33.10:3000
CLOUD_AGENT_CONFIG=./agent/agent.config:/agent/config/agent.config

# skywalking java 环境
SKYWALKING_OPS="-javaagent:/agent/skywalking-agent.jar"

# 不部署 skywalking java 环境
# -server -Xms1g -Xmx1g -Xmn512m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m
# -Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m
GATEWAY_JAVA_OPS="-Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m -XX:HeapDumpPath=/log/gateway/java_heapdump.hprof"
AUTH_JAVA_OPS="-Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m -XX:HeapDumpPath=/log/auth/java_heapdump.hprof"
SERVER_KNIFE4J_JAVA_OPS="-Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=32m -XX:MaxMetaspaceSize=80m -XX:HeapDumpPath=/log/knife4j/java_heapdump.hprof"
SERVER_SYSTEM_JAVA_OPS="-Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m -XX:HeapDumpPath=/log/server-system/java_heapdump.hprof"
SERVER_GENERATOR_JAVA_OPS="-Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m -XX:HeapDumpPath=/log/server-generator/java_heapdump.hprof"
SERVER_DICT_JAVA_OPS="-Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m -XX:HeapDumpPath=/log/server-dict/java_heapdump.hprof"
SERVER_MINIO_JAVA_OPS="-Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m -XX:HeapDumpPath=/log/server-minio/java_heapdump.hprof"
SERVER_TEST_JAVA_OPS="-Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=160m -XX:HeapDumpPath=/log/server-test/java_heapdump.hprof"
JAVA_OPS_PREFIX="-Ddruid.mysql.usePingMethod=false "
JAVA_OPS_SUFFIX="-XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:-UseLargePages"

### 各服务启动类路径配置
GATEWAY_MAIN_CLASS=com.zclcs.GatewayApplication
AUTH_MAIN_CLASS=com.zclcs.AuthApplication
KNIFE4J_MAIN_CLASS=com.zclcs.Knife4jApplication
SERVER_SYSTEM_MAIN_CLASS=com.zclcs.ServerSystemApplication
SERVER_GENERATOR_MAIN_CLASS=com.zclcs.ServerGeneratorApplication
SERVER_DICT_MAIN_CLASS=com.zclcs.ServerDictApplication
SERVER_MINIO_MAIN_CLASS=com.zclcs.ServerMinioApplication
SERVER_TEST_MAIN_CLASS=com.zclcs.ServerTestApplication

### docker wait 工具变量
# 重试之间休眠的秒数。 默认值为 1 秒。
DOCKER_WAIT_SLEEP_INTERVAL=1
# 在尝试新连接之前与远程主机的单个 TCP 连接超时。 默认值为 5 秒。
DOCKER_WAIT_HOST_CONNECT_TIMEOUT=30
# 在失败之前等待所有主机/路径可用的最大秒数。 默认值为 30 秒。
DOCKER_WAIT_TIMEOUT=500

### docker healthcheck 变量
# 健康检查的间隔，默认为 30 秒
DOCKER_HEALTHCHECK_INTERVAL=2m
# 健康检查命令运行超时时间，如果超过这个时间，本次健康检查就被视为失败，默认 30 秒
DOCKER_HEALTHCHECK_TIMEOUT=10s
# 当连续失败指定次数后，则将容器状态视为 unhealthy，默认 3 次
DOCKER_HEALTHCHECK_RETRIES=3

# skywalking 环境
SW_JDBC_TRACE_SQL_PARAMETERS=true
SW_FEIGN_COLLECT_REQUEST_BODY=true
SW_AGENT_COLLECTOR_BACKEND_SERVICES=127.0.0.1:11800
SW_GRPC_LOG_SERVER_HOST=127.0.0.1
SW_GRPC_LOG_SERVER_PORT=11800

# 注册发现使用网卡
NACOS_DISCOVERY_NETWORK_INTERFACE=eth1
NACOS_DISCOVERY_IP=192.168.33.10
# 注册发现使用网卡
#spring.cloud.nacos.discovery.networkInterface=eth1
# 注册发现使用ip
spring.cloud.nacos.discovery.ip=192.168.33.10

### nacos 注册中心
NACOS_NAMESPACE=dev
NACOS_HOST=127.0.0.1
NACOS_PORT=8848
NACOS_USERNAME=nacos
NACOS_PASSWORD=nacos

### seata 分布式事务
SEATA_PORT=8091
SEATA_IP=192.168.33.10

### 数据源mysql实例
DATASOURCE_DB_TYPE=mysql
DATASOURCE_HOST=127.0.0.1
DATASOURCE_PORT=3306
DATASOURCE_USERNAME=root
DATASOURCE_PASSWORD=123456
DATASOURCE_DRIVER=com.mysql.cj.jdbc.Driver
DATASOURCE_PARAM=useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true&serverTimezone=Asia/Shanghai

### 分布式缓存
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
REDIS_DATABASE=0
# REDIS_PASSWORD=123456

### rabbitmq
RABBIT_MQ_HOST=127.0.0.1
RABBIT_MQ_PORT=5672
RABBIT_MQ_USERNAME=root
RABBIT_MQ_PASSWORD=123456

### 业务模块数据库名称
DB_NAME_SYSTEM=${NACOS_NAMESPACE}_system
DB_NAME_GENERATOR=${NACOS_NAMESPACE}_generator
DB_NAME_TEST=${NACOS_NAMESPACE}_test
DB_NAME_MINIO=${NACOS_NAMESPACE}_minio
DB_NAME_DICT=${NACOS_NAMESPACE}_dict

### 服务名配置 暂不支持修改服务名
SERVICE_NAME_GATEWAY=gateway
SERVICE_NAME_AUTH=auth
SERVICE_NAME_KNIFE4J=knife4j
SERVICE_NAME_SERVER_SYSTEM=server-system
SERVICE_NAME_SERVER_GENERATOR=server-generator
SERVICE_NAME_SERVER_DICT=server-dict
SERVICE_NAME_SERVER_MINIO=server-minio
SERVICE_NAME_SERVER_TEST=server-test
SERVICE_NAME_SEATA=seata

### 网关服务转发路径配置
SERVICE_PATH_AUTH=/auth
SERVICE_PATH_SERVER_SYSTEM=/system
SERVICE_PATH_SERVER_GENERATOR=/generator
SERVICE_PATH_SERVER_DICT=/dict
SERVICE_PATH_SERVER_MINIO=/minio
SERVICE_PATH_SERVER_TEST=/test

### 业务模块端口分配
PORT_GATEWAY=8301
PORT_AUTH=8101
PORT_KNIFE4J=8401
PORT_TX_MANAGER=8501
PORT_SERVER_SYSTEM=8201
PORT_SERVER_GENERATOR=8202
PORT_SERVER_DICT=8205
PORT_SERVER_MINIO=8204
PORT_SERVER_TEST=8203

### 网关
GATEWAY_HOST=127.0.0.1

### 日志管理
LOG_CONTROLLER_PARAMS=false
LOG_CONTROLLER_PARAMS_GATEWAY=false
LOG_SQL_ENABLED=true

### minio环境变量
ROOT_USER=minio
ROOT_PASSWORD=minio123
ENDPOINT=http://127.0.0.1:9000
DOMAIN_NAME=
HOST=192.168.33.10
PORT=9000

### 文档管理服务
DOC_ENABLE_AGGREGATION=true
KNIFE4J_USERNAME=zclcs
KNIFE4J_PASSWORD=123456
